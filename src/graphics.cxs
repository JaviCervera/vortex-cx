Strict

Private
Import color
Import renderer
Import world

Public
Class Graphics
Public
	Const BlendSolid:Int = Renderer.BlendSolid
	Const BlendAlpha:Int = Renderer.BlendAlpha
	Const BlendAdd:Int = Renderer.BlendAdd
	Const BlendMul:Int = Renderer.BlendMul
	
	Function Setup2D:Void(x:Int, y:Int, width:Int, height:Int)
		Renderer.Setup2D(x, y, width, height)
	End
	
	Function SetupMojo:Void()
		Renderer.SetupMojo()
	End
	
	Function BlendMode:Void(mode:Int)
		Renderer.BlendMode(mode)
	End
	
	Function Color:Void(color:Int)
		Renderer.Color(color)
	End
	
	Function Clear:Void(col:Int = color.Color.Black)
		Renderer.ClearColorBuffer(col)
	End
	
	Function DrawPoint:Void(x:Float, y:Float)
		Renderer.DrawPoint(x, y)
	End
	
	Function DrawLine:Void(x1:Float, y1:Float, x2:Float, y2:Float)
		Renderer.DrawLine(x1, y1, x2, y2)
	End
	
	Function DrawRect:Void(x:Float, y:Float, width:Float, height:Float)
		Renderer.DrawRect(x, y, width, height)
	End
	
	Function DrawEllipse:Void(x:Float, y:Float, width:Float, height:Float)
		Renderer.DrawEllipse(x, y, width, height)
	End
	
	Function FPS:Int()
		Return mFps
	End
	
	Function RenderCalls:Int()
		Return mRenderCalls
	End
	
	Function VendorName:String()
		Return Renderer.VendorName()
	End
	
	Function RendererName:String()
		Return Renderer.RendererName()
	End
	
	Function APIVersionName:String()
		Return Renderer.APIVersionName()
	End
	
	Function ShadingVersionName:String()
		Return Renderer.ShadingVersionName()
	End

	Function APIVersion:Float()
		Return Renderer.APIVersion()
	End

	Function ShadingVersion:Float()
		Return Renderer.ShadingVersion()
	End
	
	Function MaxTextureSize:Int()
		Return Renderer.MaxTextureSize()
	End
	
	Function _UpdateFPS:Void()
		mFpsCounter += 1
		mFpsAccum += World.DeltaTime()
		If mFpsAccum >= 1
			mFps = mFpsCounter
			mFpsCounter = 0
			mFpsAccum = 0
		End
	End
	
	Function _SetRenderCalls:Void(num:Int)
		mRenderCalls = num
	End
Private
	Global mFpsCounter	: Int
	Global mFpsAccum		: Float
	Global mFps					: Int
	Global mRenderCalls	: Int
	
	Method New()
	End
End
